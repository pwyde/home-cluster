---
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: postgres16-immich
spec:
  instances: 3
  imageName: ghcr.io/tensorchord/cloudnative-pgvecto.rs:16.2-v0.2.1
  primaryUpdateStrategy: unsupervised
  storage:
    size: 10Gi
    storageClass: truenas-ssd-iscsi
  superuserSecret:
    name: cloudnative-pg-secret
  enableSuperuserAccess: true
  # https://github.com/tensorchord/cloudnative-pgvecto.rs#cnpgvectors
  bootstrap:
    initdb:
      postInitSQL:
        - ALTER SYSTEM SET search_path TO "$user", public, vectors;
        - CREATE EXTENSION IF NOT EXISTS "vectors";
  postgresql:
    shared_preload_libraries:
      - "vectors.so"
    parameters:
      max_connections: "600"
      max_slot_wal_keep_size: 10GB
      shared_buffers: 512MB
  nodeMaintenanceWindow:
    inProgress: false
    reusePVC: true
  resources:
    requests:
      cpu: 500m
    limits:
      memory: 2Gi
  monitoring:
    enablePodMonitor: true
  backup:
    retentionPolicy: 30d
    barmanObjectStore: &barmanObjectStore
      data:
        compression: bzip2
      wal:
        compression: bzip2
        maxParallel: 8
      destinationPath: s3://cloudnative-pg/
      endpointURL: https://s3.${SECRET_DOMAIN}
      # Note: serverName version needs to be inclemented
      # when recovering from an existing cnpg cluster.
      serverName: &currentCluster postgres16-immich-v1
      s3Credentials:
        accessKeyId:
          name: cloudnative-pg-secret
          key: s3-access-key
        secretAccessKey:
          name: cloudnative-pg-secret
          key: s3-secret-key
  # Note: previousCluster needs to be set to the name of the previous
  # cluster when recovering from an existing cnpg cluster.
  # bootstrap:
  #   recovery:
  #     source: &previousCluster postgres16-immich-v1
  # Note: externalClusters is needed when recovering from an existing cnpg cluster.
  # externalClusters:
  #   - name: *previousCluster
  #     barmanObjectStore:
  #       <<: *barmanObjectStore
  #       serverName: *previousCluster
