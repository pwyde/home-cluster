---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app jellyfin
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.4.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: democratic-csi-iscsi
      namespace: storage
  values:
    controllers:
      jellyfin:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          jellyfin:
            image:
              repository: ghcr.io/jellyfin/jellyfin
              tag: 10.9.10@sha256:79fb3d73a3e995a3960b41d7d1e16ca6a06fb0b9938404ba38c0072a7e5f358c
            env:
              TZ: ${TIMEZONE}
              DOTNET_SYSTEM_IO_DISABLEFILELOCKING: "true"
              JELLYFIN_FFmpeg__probesize: 50000000
              JELLYFIN_FFmpeg__analyzeduration: 50000000
              JELLYFIN_PublishedServerUrl: https://jellyfin.${SECRET_DOMAIN}
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: &port 8096
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 30
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 100m
                memory: 2Gi
                nvidia.com/gpu: 1 # Request 1 GPU.
              limits:
                memory: 4Gi
                nvidia.com/gpu: 1
    defaultPodOptions:
      priorityClassName: jellyfin-priority
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/hostname
                operator: In
                values:
                - k8s-5
      nodeSelector:
        nvidia.com/gpu.present: "true"
      runtimeClassName: nvidia
      securityContext:
        runAsNonRoot: true
        runAsUser: &uid 5000
        runAsGroup: *uid
        fsGroup: *uid
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups: [4000]
        seccompProfile: { type: RuntimeDefault }
    service:
      app:
        type: LoadBalancer
        annotations:
          io.cilium/lb-ipam-ips: ${SVC_IP_JELLYFIN}
        controller: *app
        ports:
          http:
            port: *port
          discovery:
            port: 7359
            protocol: UDP
    ingress:
      app:
        annotations:
          external-dns.alpha.kubernetes.io/target: &host jellyfin.${SECRET_DOMAIN}
        className: internal
        hosts:
          - host: *host
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host
    persistence:
      config:
        existingClaim: jellyfin-config
      media:
        type: nfs
        server: ${TRUENAS_IP}
        path: ${NFS_PATH_MEDIA}
        globalMounts:
          - path: /data
